<?xml version="1.0" encoding="utf-8"?>
<!--

	 ADOBE SYSTEMS INCORPORATED
	 Copyright 2010 Adobe Systems Incorporated
	 All Rights Reserved.

	 NOTICE: Adobe permits you to use, modify, and distribute this file
	 in accordance with the terms of the license agreement accompanying it.

-->

<!-- TODO
	 Move the indicator tooltip string to a resource bundle
-->

<!--- The default skin class for the Spark FormItem component.

	 @see spark.components.FormItem

	 @langversion 3.0
	 @playerversion Flash 10
	 @playerversion AIR 1.5
	 @productversion Flex 4.5
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
		alpha.disabledStates=".5">

	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
        /** 
        * @copy spark.skins.spark.ApplicationSkin#hostComponent
        */
        [HostComponent("spark.components.FormItem")]
        ]]>
	</fx:Metadata>

	<fx:Script fb:purpose="styling">
		<![CDATA[
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				// Push backgroundColor and backgroundAlpha directly.
				// Handle undefined backgroundColor by hiding the background object.
				if (isNaN(getStyle("backgroundColor")))
				{
					background.visible=false;
				}
				else
				{
					background.visible=true;
					bgFill.color=getStyle("backgroundColor");
					bgFill.alpha=getStyle("backgroundAlpha");
				}

				var _left:Object=0;
				var indicatorSource:Object;
				if (currentState == "error" || currentState == "requiredAndError")
				{
					indicatorSource=getStyle("errorIndicatorSource");
				}
				else if (currentState == "required" || "requiredAndDisabled")
				{
					_left=4;
					indicatorSource=getStyle("requiredIndicatorSource");
				}

				if (indicatorSource && indicatorDisplay)
				{
					indicatorDisplay.left=_left;
					indicatorDisplay.source=indicatorSource;
				}

				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}

			/**
			 *  @private
			 */
			override public function setCurrentState(stateName:String, playTransition:Boolean=true):void
			{
				super.setCurrentState(stateName, playTransition);
				invalidateDisplayList();
			}
		]]>
	</fx:Script>

	<s:states>
		<s:State name="normal"/>
		<s:State name="disabled"
				 stateGroups="disabledStates"/>
		<s:State name="error"
				 stateGroups="errorStates"/>
		<s:State name="required"
				 stateGroups="requiredStates"/>
		<s:State name="requiredAndDisabled"
				 stateGroups="requiredStates, disabledStates"/>
		<s:State name="requiredAndError"
				 stateGroups="requiredStates, errorStates"/>
	</s:states>

	<!--- Defines the appearance of the FormItem's background. -->
	<s:Rect id="background"
			left="0"
			right="0"
			top="0"
			bottom="0">
		<s:fill>
			<!--- @private -->
			<s:SolidColor id="bgFill"
						  color="#FFFFFF"/>
		</s:fill>
	</s:Rect>

	<s:VGroup left="0"
			  right="0"
			  top="0"
			  bottom="0"
			  gap="4"
			  horizontalAlign="left"
			  paddingBottom="3"
			  paddingLeft="3"
			  paddingRight="3"
			  verticalAlign="top">

		<s:HGroup width="100%"
				  gap="1"
				  horizontalAlign="left"
				  paddingTop="2"
				  verticalAlign="bottom">
			<!--- @copy spark.components.FormItem#sequenceLabelDisplay -->
			<s:Label id="sequenceLabelDisplay"
					 fontWeight="bold"
					 verticalAlign="bottom"/>

			<s:Group width="20"
					 height="20">
				<!--<s:Rect left="0"
					 right="0"
					 top="0"
					 bottom="0">
					 <s:fill>
					 <s:SolidColor color="0xaaee33"/>
					 </s:fill>
					 </s:Rect>-->
				<!--- @private -->
				<s:Image id="indicatorDisplay"
						 includeIn="requiredStates,errorStates"
						 top="-2"
						 width="22"
						 height="22"
						 scaleMode="stretch"
						 smooth="true"
						 smoothingQuality="high"/>
			</s:Group>

			<!--- @copy spark.components.FormItem#labelDisplay -->
			<s:Label id="labelDisplay"
					 width="100%"
					 fontWeight="bold"
					 verticalAlign="bottom"/>
		</s:HGroup>

		<!--- @copy spark.components.FormItem#helpContentGroup -->
		<s:Group id="helpContentGroup"
				 excludeFrom="errorStates"
				 color="#4B81DA"
				 fontStyle="italic"
				 fontWeight="normal"/>

		<!--- @copy spark.components.FormItem#errorTextDisplay -->
		<s:RichText id="errorTextDisplay"
					includeIn="errorStates"
					width="100%"
					color="0xFE0000"
					fontFamily="Georgia"
					fontStyle="italic"
					fontWeight="normal"
					maxDisplayedLines="-1"
					paddingLeft="7"/>

		<!--- @copy spark.components.SkinnableContainer#contentGroup -->
		<!-- Don't show the error tip on the content elements -->
		<s:Group id="contentGroup"
				 width="100%"
				 minHeight="0"
				 showErrorSkin="true"
				 showErrorTip="false">
			<s:layout>
				<s:VerticalLayout/>
			</s:layout>
		</s:Group>
	</s:VGroup>
</s:Skin>
