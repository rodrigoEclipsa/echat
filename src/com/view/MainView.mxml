<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:view="com.view.*"
		 width="100%"
		 height="100%"
		 currentState="Login"
		 height.Logged="100%"
		 creationComplete="group1_creationCompleteHandler(event)"
		 minWidth="640"
		 xmlns:customComponent="customComponent.*">



	<fx:Script>
		<![CDATA[
			import com.controller.MainController;
			import com.event.ChatManagerEvent;
			import com.event.MainEvent;
			import com.model.ChatManagerModel;
			import com.model.LoginModel;
			import com.model.MainModel;

			import customComponent.LoadWait;

			import flashx.textLayout.elements.ParagraphElement;
			import flashx.textLayout.elements.SpanElement;

			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;

			import org.igniterealtime.xiff.core.EscapedJID;
			import org.igniterealtime.xiff.core.UnescapedJID;
			import org.igniterealtime.xiff.data.Message;

			import renderer.ChatRenderer;

			import service.ServiceEchat;

			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;

			import util.DateManager;
			import util.app.ConfigParameters;
			import util.vo.ChatVO;
			import util.vo.QueueChatVO;



			private var loadWait:LoadWait;

			[Bindable]
			[Inject]
			public var mainModel:MainModel;


			[Bindable]
			[Inject]
			public var mainController:MainController;


			[Bindable]
			[Inject]
			public var loginModel:LoginModel;





			public var is_writing:Boolean=false;




			[Bindable]
			public var chatWindowView:ChatWindowView=new ChatWindowView();




            [EventHandler(event="LoginEvent.loginSuccess")]
			public function loginEvent_loginSuccess():void
			{
				/*
				   typicalItem=new ChatVO();
				   typicalItem.body="dsadasdasd sa dsadsa dsa sa " + "dsadasdasdasdsa " +
				   "ds " + "ad sad " + "sadsad   ds ds" + " ad as" +
				   " das das " + "das d " + "asd asd " + "as das da" + " sd " + "asd " + "sad" + " as a "
				 */


				this.currentState="Logged";

			}





			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				//asigno esta profundidad para que este debajo de la barra del chat
				chatWindowView.depth=5;

			}


			public function showLoad():void
			{

				if (!loadWait)
				{
					loadWait=new LoadWait();

					this.addElement(loadWait);

					this.mouseChildren=false;
					this.tabChildren=false;

				}
			}



			public function removeLoad():void
			{


				if (loadWait)
				{

					this.removeElement(loadWait);
					loadWait=null;

					this.mouseChildren=true;
					this.tabChildren=true;

				}
			}



			public function addChatWindow():void
			{

				group_logged.addElement(chatWindowView);




			}


			public function minimizeChatWindow():void
			{
				trace("chat: " + chatWindowView)

				group_logged.removeElement(chatWindowView);


			}





			protected function tabBar_queueChat_changeHandler(event:IndexChangeEvent):void
			{





			}

			protected function borderContainer_queueChat_clickHandler(event:MouseEvent):void
			{


				if (mainModel.arrayCollection_queueCall.length > 0)
				{


				}

			}



			[EventHandler(event="MainEvent.selectedChat", properties="queueChatVO")]
			public function selectedChat(queueChatVO:QueueChatVO):void
			{

				mainModel.currentQueueChatVO=queueChatVO;
				addChatWindow();

			}










			private function serviceEchat_testHandler(result:Object):void
			{

				trace(ObjectUtil.toString(result));


			}


			protected function hGroupMenu_home_clickHandler(event:MouseEvent):void
			{

				viewStack_navigator.selectedChild=navigatorContent_home;


			}
		]]>
	</fx:Script>


	<s:states>
		<s:State name="Login"/>
		<s:State name="Logged"/>
	</s:states>





	<fx:Declarations>



	</fx:Declarations>


	<view:LoginView includeIn="Login"
					horizontalCenter="0"
					verticalCenter="0"/>

	<s:Group id="group_logged"
			 includeIn="Logged"
			 left="0"
			 right="0"
			 top="0"
			 bottom="0">



		<s:HGroup left="0"
				  right="0"
				  top="0"
				  bottom="31"
				  gap="0"
				  depth="1">



			<s:SkinnableContainer width="180"
								  height="100%"
								  backgroundColor="#3D3D3D">
				<s:layout>
					<s:VerticalLayout gap="0"/>
				</s:layout>
				<s:Group width="100%"
						 height="188">
					<s:Label top="10"
							 color="#FFFFFF"
							 fontSize="22"
							 horizontalCenter="0"
							 text="eChat"/>
					<s:Image id="image_agentAvatar"
							 x="0"
							 top="35"
							 bottom="0"
							 width="100%"/>
				</s:Group>
				<s:Spacer height="10"/>
				<s:Label fontSize="14" fontWeight="bold" text="Dominios"/>
				<s:List width="100%" height="100" contentBackgroundAlpha="1.0"
						contentBackgroundColor="#686868"/>
				<s:Group width="100%"
						 height="34"
						 id="group_menuItemHome"
						 click="hGroupMenu_home_clickHandler(event)">
					<s:Label color="#FFFFFF"
							 horizontalCenter="0"
							 text="Pagina principal"
							 verticalCenter="0"/>
					<mx:HRule left="0"
							  right="0"
							  bottom="0"
							  shadowColor="#5A5A5A"
							  strokeColor="#000000"/>
				</s:Group>
				<s:Group width="100%"
						 height="34"
						 id="groupMenuItem_visitList"
						 click="hGroupMenu_home_clickHandler(event)">
					<s:Label color="#FFFFFF"
							 horizontalCenter="0"
							 text="Lista de visitantes"
							 verticalCenter="0"/>
					<mx:HRule left="0"
							  right="0"
							  bottom="0"
							  shadowColor="#5A5A5A"
							  strokeColor="#000000"/>
				</s:Group>
				<s:Group width="100%"
						 height="34"
						 id="groupMenuItem_history"
						 click="hGroupMenu_home_clickHandler(event)">
					<s:Label color="#FFFFFF"
							 horizontalCenter="0"
							 text="Historial"
							 verticalCenter="0"/>
					<mx:HRule left="0"
							  right="0"
							  bottom="0"
							  shadowColor="#5A5A5A"
							  strokeColor="#000000"/>
				</s:Group>
				<s:VGroup width="100%">
					
				
				<s:Spacer width="10" height="5"/>
				<s:Label fontSize="14" fontWeight="bold" text="Administrar"/>
				<s:Spacer width="10" height="5"/>
				<s:VGroup id="vGroup_menuAdminister" width="100%">
					<s:Group width="100%"
							 height="24"
							 id="groupMenuItem_history0"
							 click="hGroupMenu_home_clickHandler(event)">
						<s:Label color="#FFFFFF"
								 horizontalCenter="0"
								 text="Agentes"
								 verticalCenter="0"/>
					</s:Group>
					<s:Group width="100%"
							 height="24"
							 id="groupMenuItem_history4"
							 click="hGroupMenu_home_clickHandler(event)">
						<s:Label color="#FFFFFF"
								 horizontalCenter="0"
								 text="Departamentos"
								 verticalCenter="0"/>
					</s:Group>
					<s:Group width="100%"
							 height="24"
							 id="groupMenuItem_history1"
							 click="hGroupMenu_home_clickHandler(event)">
						<s:Label color="#FFFFFF"
								 horizontalCenter="0"
								 text="Accesos directos"
								 verticalCenter="0"/>
					</s:Group>
					<s:Group width="100%"
							 height="24"
							 id="groupMenuItem_history2"
							 click="hGroupMenu_home_clickHandler(event)">
						<s:Label color="#FFFFFF"
								 horizontalCenter="0"
								 text="Visitantes bloqueados"
								 verticalCenter="0"/>
					</s:Group>
					<s:Group width="100%"
							 height="24"
							 id="groupMenuItem_history3"
							 click="hGroupMenu_home_clickHandler(event)">
						<s:Label color="#FFFFFF"
								 horizontalCenter="0"
								 text="Disparadores"
								 verticalCenter="0"/>
					</s:Group>
				</s:VGroup>
				</s:VGroup>
				<s:VGroup width="100%">
					
				
				<s:Spacer width="10" height="5"/>
				<s:Label fontSize="14" fontWeight="bold" text="Configuraciones"/>
				<s:Spacer width="10" height="5"/>
				<s:VGroup id="vGroup_menuAdminister0" width="100%">
					<s:Group width="100%"
							 height="24"
							 id="groupMenuItem_history5"
							 click="hGroupMenu_home_clickHandler(event)">
						<s:Label color="#FFFFFF"
								 horizontalCenter="0"
								 text="Widget"
								 verticalCenter="0"/>
					</s:Group>
					<s:Group width="100%"
							 height="24"
							 id="groupMenuItem_history6"
							 click="hGroupMenu_home_clickHandler(event)">
						<s:Label color="#FFFFFF"
								 horizontalCenter="0"
								 text="Personal"
								 verticalCenter="0"/>
					</s:Group>
					<s:Group width="100%"
							 height="24"
							 id="groupMenuItem_history7"
							 click="hGroupMenu_home_clickHandler(event)">
						<s:Label color="#FFFFFF"
								 horizontalCenter="0"
								 text="Cuenta"
								 verticalCenter="0"/>
					</s:Group>
				</s:VGroup>
				</s:VGroup>

			</s:SkinnableContainer>
			<mx:ViewStack width="100%"
						  height="100%"
						  id="viewStack_navigator"
						  selectedIndex="0">

				<s:NavigatorContent id="navigatorContent_home">

					<view:HomeView/>


				</s:NavigatorContent>

			</mx:ViewStack>



		</s:HGroup>

		<s:HGroup id="hgroup_queueChat"
				  left="0"
				  right="0"
				  bottom="0"
				  height="30"
				  depth="10">

			<s:BorderContainer height="100%"
							   id="borderContainer_queueChat"
							   width="180"
							   backgroundColor="#888888"
							   click="borderContainer_queueChat_clickHandler(event)"
							   cornerRadius="2">

				<s:Label backgroundAlpha="{mainModel.arrayCollection_queueCall.length &gt; 0 ? 1 : 0}"
						 color="#FFFFFF"
						 fontSize="11"
						 fontWeight="bold"
						 horizontalCenter="0"
						 text="{mainModel.arrayCollection_queueCall.length == 0 ? 'NO HAY PETICIONES DE CHAT ' : 'ATENDER PETICIONES DE CHAT ' + mainModel.arrayCollection_queueCall.length}"
						 textAlign="center"
						 verticalAlign="middle"
						 verticalCenter="0"/>
				<!--
					 <customComponent:BusyIndicator bottom="2" width="12" height="12" horizontalCenter="0"  id="busyIndicator_queueChat"/>
				-->
			</s:BorderContainer>



			<s:TabBar id="tabBar_queueChat"
					  y="548"
					  width="100%"
					  height="100%"
					  change="tabBar_queueChat_changeHandler(event)"
					  dataProvider="{mainModel.arrayCollection_queueChat}"
					  itemRenderer="renderer.QueueChatRenderer"
					  selectedIndex="-1">

				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>


			</s:TabBar>

		</s:HGroup>





	</s:Group>






</s:Group>
