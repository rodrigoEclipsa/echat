<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:s="library://ns.adobe.com/flex/spark"
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  width="100%"
					  height="100%"
					  minWidth="1"
					   enabled="false"
					  creationComplete="skinnablecontainer1_creationCompleteHandler(event)"
					  show="skinnablecontainer1_showHandler(event)"
					  currentState="{mainModel.currentDomainWorkSpace.currentActiveContact is User ? 'User' : 'Agent'}"
					  width.Agent="100%" xmlns:customComponent="customComponent.*">





	<fx:Script>
		<![CDATA[
			import com.controller.ChatWindowController;
			import com.controller.MainController;
			import com.model.LoginModel;
			import com.model.MainModel;
			import com.view.MainView;
			
			import customComponent.LoadWait;
			
			import flashx.textLayout.conversion.TextConverter;
			
			import mx.events.FlexEvent;
			
			import org.igniterealtime.xiff.data.Message;
							
			import util.DateManager;
			import util.Interface.IContact;
			import util.classes.Agent;
			
			import util.classes.User;



			private var loadWait:LoadWait;

			[Bindable]
			[Inject]
			public var mainModel:MainModel;



			[Inject]
			public var chatWindowController:ChatWindowController;	


			[Bindable]
			[Inject]
			public var loginModel:LoginModel;

			[Bindable]
			[ViewAdded]
			public var mainView:MainView;





			public var is_writing:Boolean=false;


			

			[Bindable]
			private var user:User;
			[Bindable]
			private var agent:Agent;



			[Inject]
			public var mainController:MainController;



        
			
			

			public function showLoad():void
			{

				if (!loadWait)
				{
					loadWait=new LoadWait();

					this.addElement(loadWait);

					this.mouseChildren=false;
					this.tabChildren=false;

				}
			}



			public function removeLoad():void
			{


				if (loadWait)
				{

					this.removeElement(loadWait);
					loadWait=null;

					this.mouseChildren=true;
					this.tabChildren=true;

				}

			}






			protected function button_close_clickHandler(event:MouseEvent):void
			{



			}



			protected function button_mininize_clickHandler(event:MouseEvent):void
			{


				chatWindowController.minimizeChatWindow();

			}





			protected function skinnablecontainer1_creationCompleteHandler(event:FlexEvent):void
			{

	
				//list_historyText.scroller.verticalScrollBar.addEventListener(MouseEvent.MOUSE_WHEEL, list_mouseWheelHandler);
				//textArea_input.addEventListener(FlexEvent.ENTER,textArea_input_enterHandler);

				//textArea_history.scroller.verticalScrollBar.addEventListener(FlexEvent.UPDATE_COMPLETE,textArea_history_updateCompleteHandler);
				//	textArea_history.scroller.verticalScrollBar.addEventListener(Event.RENDER,textArea_history_valueCommitHandler);

				//var host:Icontact = mainModel.currentWorkSpaceDomain.currentActiveContact;

				//ChangeWatcher.watch(mainModel.currentWorkSpaceDomain,"currentActiveContact",dataChange);

				//text="{mainModel.currentWorkSpaceDomain.currentActiveContact.userVO.id.toString()}"


			}

		
			
			private function textArea_input_enterHandler(event:FlexEvent):void
			{


				trace("enter ");


			}


			public function dataChange():void
			{

				//trace("datachange ..............")
				///el objeto puede ser un usuario o un agente
				if (mainModel.currentDomainWorkSpace.currentActiveContact is User)
				{
					user=mainModel.currentDomainWorkSpace.currentActiveContact as User;
					this.currentState="User";
					trace("es un usuario .................")

				}
				else
				{
					agent=mainModel.currentDomainWorkSpace.currentActiveContact as Agent;

					this.currentState="Agent";


				}

			//	updateScroll();

			}




			protected function textArea_input_keyDownHandler(event:KeyboardEvent):void
			{

				if (event.keyCode == Keyboard.ENTER && !event.shiftKey)
				{
					
				//	richEditableText_input.dispatchEvent(new FlexEvent(FlexEvent.ENTER));

					
				sendMessage();
      
				}
			
				
				
				
				
			}




			private function sendMessage():void
			{


				var message:Message=new Message(mainModel.currentDomainWorkSpace.currentActiveContact.jid.escaped, null, richEditableText_input.text, null, Message.TYPE_CHAT, null);


				
				mainController.sendMesage(message);

				
				appendFormatTextChat(richEditableText_input.text, mainModel.currentDomainWorkSpace.currentActiveContact, message.id,true)



				richEditableText_input.text="";




			}



			

			private function str_replace( replace_with:String, replace:String, original:String ):String
			{
				var array:Array = original.split(replace_with);
				return array.join(replace);	
			}
          
			
		
			
			public function appendFormatTextChat(body:String,iContact:IContact,messageId:String,isMy:Boolean):void
			{
				//normalizo el texto, por que cada vez que hago un salto de linea con shift genera un simbolo raro en vez de \n o \r
				
				body = str_replace("â€¨","<br/>",body);
				body = str_replace("\n","<br/>",body);
			
				
				var fromContactId:int ;
				
				var date:Date = new Date();
				
				var name:String = isMy ? loginModel.agentVO.nick : iContact.getNickChat() ;
			
			 
			   iContact.lastChatTimeStamp = date.time;
				
				if(isMy)
				{
					
					fromContactId = loginModel.agentVO.id;
					//trace("contactJid : " + contactJid);
					
					
				}	
				else
				{
					
					fromContactId = iContact.getContactId();
				}
				
				
				//pregunto si el eltimo que escribio en el chat no fue el userId , o si lastChatUserId es falso entonces nadie escribio nada
				//trace("contactId : " + contactJid )
				if(!iContact.lastChatConatactId || iContact.lastChatConatactId != fromContactId)
				{
					
					iContact.lastChatConatactId = fromContactId;
					
					html_history.htmlLoader.window.appendChat(body,name,DateManager.formatDate(),messageId,true);
					
					
				}
				else
				{
					
					
					
					
					var passedTime:Number = date.time - iContact.lastChatTimeStamp;
					
					if(passedTime > 60000)
					{
						
							
					html_history.htmlLoader.window.appendChat(body,name,DateManager.formatDate(),messageId,true);
						
						
					}
					else
					{
					
						html_history.htmlLoader.window.appendChat(body,name,DateManager.formatDate(),messageId,false);
						
				    }
					
					
					
					
					
				}
				
			
				
				
				
				
				
				
	
				
				
			}



			protected function richEditableText_input_enterHandler(event:FlexEvent):void
			{

				event.preventDefault();
				sendMessage();
			}







			protected function button1_clickHandler(event:MouseEvent):void
			{

		

			
			}
			
			
			
			
			protected function skinnablecontainer1_showHandler(event:FlexEvent):void
			{
			//	list_historyText.dataProvider = mainModel.currentDomainWorkSpace.currentActiveContact.historyText;
				
			}
			
			
			
			
			protected function html_history_completeHandler(event:Event):void
			{
				this.enabled = true;

			
				
			}

			
			
			
			
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="Agent"/>
		<s:State name="User"/>
	</s:states>






	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<s:layout>
		<s:VerticalLayout gap="0"/>
	</s:layout>

	<s:SkinnableContainer width="100%"
						  height="40"
						  backgroundColor="#383838">
		<s:layout>
			<s:HorizontalLayout/>
		</s:layout>
		
		<s:Button id="button_close"
				  click="button_close_clickHandler(event)"
				  right="5"
				  width="22"
				  height="22"
				  label="x"
				  verticalCenter="0"/>
		<s:Button id="button_mininize"
				  click="button_mininize_clickHandler(event)"
				  right="34"
				  width="22"
				  height="22"
				  label="-"
				  verticalCenter="0"/>
		<s:Label id="label_nameVisitor"
				 left="50"
				 color="#FFFFFF"
				 verticalCenter="0"
				 text.Agent="{agent.agentVO.name}"
				 text.User="{user.userVO.id}"/>
		<s:Image left="12"
				 width="20"
				 height="20"
				 verticalCenter="0"/>
		<s:Button x="134"
				  y="10"
				  label="Button"
				  click="button1_clickHandler(event)"/>
		

	</s:SkinnableContainer>




	<s:SkinnableContainer width="100%"
						  height="100%"
						  backgroundColor="#EEEEEE">
		<s:layout>
			<s:HorizontalLayout gap="0"/>
		</s:layout>


		<s:VGroup width="504"
				  height="100%"
				  gap="0"
				  paddingBottom="10"
				  paddingLeft="10"
				  paddingTop="10"
				  width.Agent="408">

<s:BorderContainer  width="100%" height="100%">
	

			 <mx:HTML width="100%" height="100%" id="html_history" location="http://eclipsait.com/developer/amfphp_echat/index.php/chat/getChat" 
					  
					   complete="html_history_completeHandler(event)"
					  
					  />
					  
				
</s:BorderContainer>	
		

			<s:Group width="100%"
					 height="10">
				<s:Label id="label_writing"
						 top="0"
						 fontSize="10"
						 fontStyle="italic"
						 fontWeight="normal"
						 horizontalCenter="0"/>
			</s:Group>

			<s:BorderContainer width="100%"
							   height="143">

				<s:Scroller id="scroller_inputText"
							width="100%"
							height="100%">
					<s:RichEditableText id="richEditableText_input"
										width="100%"
										height="100%"
										
										   
										keyDown="textArea_input_keyDownHandler(event)"
										paddingLeft="5"
										paddingTop="5"/>

				</s:Scroller>

			</s:BorderContainer>


		</s:VGroup>

		<s:Scroller width="100%"
					horizontalScrollPolicy="off"
					verticalScrollPolicy="off"
					height="100%">


			<s:VGroup id="vGroup_clientInfo"
					  width="100%"
					  height="100%"
					  horizontalAlign="center"
					  paddingBottom="10"
					  paddingLeft="10"
					  paddingRight="2"
					  paddingTop="10">




				<s:HGroup width="100%"
						  verticalAlign="middle">
					<s:Image width="50"
							 height="50"/>
					<s:BorderContainer width="100%"
									   borderColor="#9C9C9C">

						<s:layout>
							<s:VerticalLayout gap="0"/>
						</s:layout>

						<s:TextInput id="txt_nameVisitorInput"
									 width="100%"
									 borderColor="#DADADA"
									 borderVisible="false"
									 prompt="nombre"/>
						<mx:HRule width="100%"/>
						<s:TextInput id="txt_emailVisitor"
									 width="100%"
									 borderColor="#DADADA"
									 borderVisible="false"
									 prompt="email"/>

					</s:BorderContainer>

				</s:HGroup>
				<s:TextArea width="100%"
							height="100"
							borderColor="#9C9C9C"
							prompt="Agregar nota del visitante"/>
				<mx:HRule width="100%"/>
				<s:BorderContainer includeIn="User"
								   width="100%"
								   height="343"
								   borderColor="#9C9C9C"
								   cornerRadius="2">
					<s:layout>
						<s:VerticalLayout paddingBottom="5"
										  paddingLeft="5"
										  paddingRight="5"
										  paddingTop="5"/>
					</s:layout>
					<s:VGroup x="10"
							  y="43">
						<s:Label color="#888888"
								 text="Ubicacion"/>
						<s:Label text="Label"/>
					</s:VGroup>
					<s:VGroup>
						<s:Label color="#888888"
								 text="Browser"/>
						<s:Label text="Label"/>
					</s:VGroup>
					<s:VGroup>
						<s:Label color="#888888"
								 text="Plataforma"/>
						<s:Label text="Label"/>
					</s:VGroup>
					<s:VGroup>
						<s:Label color="#888888"
								 text="Direccion ip"/>
						<s:Label text="Label"/>
					</s:VGroup>
				</s:BorderContainer>



			</s:VGroup>

		</s:Scroller>
		<s:VScrollBar id="vScrollBar_infoClient"
					  viewport="{vGroup_clientInfo}"
					  skinClass="skin.vScrollerWindowChatSkin"
					  height="100%"/>
	</s:SkinnableContainer>







</s:SkinnableContainer>
